%YAML:1.0

#--------------------------------------------------------------------------------------------
# Camera Parameters. Adjust them!
#--------------------------------------------------------------------------------------------

# Camera calibration and distortion parameters (OpenCV) 
Camera.fx: 7.8135803071870055e+02
Camera.fy: 7.8135803071870055e+02
Camera.cx: 6.1796599578857422e+02
Camera.cy: 2.6354596138000488e+02


Camera.k1: 0
Camera.k2: 0
Camera.p1: 0
Camera.p2: 0


Camera.width: 1280
Camera.height: 560

# Camera frames per second 
Camera.fps: 10.0

# stereo baseline times fx  f*x/1000
Camera.bf: 376.248406

# 其为相机的基线×相机的焦距。
# 我的基线：norm(stereoParams.TranslationOfCamera2)=481.5313939
# fx = 7.8135803071870055e+02
# 481.5313939 * 7.8135803071870055e+02 = 376.248406

# Color order of the images (0: BGR, 1: RGB. It is ignored if images are grayscale)
Camera.RGB: 0

# Close/Far threshold. Baseline times.
ThDepth: 35

# 深度阈值，不是一个精确的数值
# 自己粗略估计一个相机可以良好显示的最大距离值为s = 10  
# 如果fx = 100, Camera.bf = 20
# 那么 ThDepth = s*fx/Camera.bf = 10 *100 /20 = 50
# 将你自己的参数带入上述公式 可以得到大概的阈值。



# --------------------------------------------------------------------------------------------
# Stereo Rectification. Only if you need to pre-rectify the images.
# Camera.fx, .fy, etc must be the same as in LEFT.P
# --------------------------------------------------------------------------------------------
LEFT.height: 560
LEFT.width: 1280
LEFT.D: !!opencv-matrix
   rows: 1
   cols: 5
   dt: d
   data: [ -5.0040485799999999e-02, 1.2001217170000000e-01,
       -6.2598060000000004e-04, -1.1825064000000000e-03,
       -6.3505207999999994e-02 ]
LEFT.K: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [ 8.1640221474060002e+02, -2.3882017757999998e+00,
       6.0882658427579997e+02, 0., 8.1738388562809996e+02,
       2.6668865652440002e+02, 0., 0., 1. ]
LEFT.R:  !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [ 9.9997254129090618e-01, 4.5692577635557559e-04,
       -7.3964777456505156e-03, -4.4429638331580672e-04,
       9.9999844088933343e-01, 1.7090405571066896e-03,
       7.3972471184065493e-03, -1.7057074007475366e-03,
       9.9997118523352080e-01 ]
LEFT.P:  !!opencv-matrix
   rows: 3
   cols: 4
   dt: d
   data: [ 7.8135803071870055e+02, 0., 6.1796599578857422e+02, 0., 0.,
       7.8135803071870055e+02, 2.6354596138000488e+02, 0., 0., 0., 1.,
       0. ]

RIGHT.height: 560
RIGHT.width: 1280
RIGHT.D: !!opencv-matrix
   rows: 1
   cols: 5
   dt: d
   data: [ -5.9498796899999998e-02, 1.6063677120000000e-01,
       4.5858299999999998e-04, -1.7561082000000000e-03,
       -1.0952373579999999e-01 ]
RIGHT.K: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [ 8.1573555182699999e+02, -2.4178989085999998e+00,
       6.0551823756559997e+02, 0., 8.1690138212270006e+02,
       2.5886424284880002e+02, 0., 0., 1. ]
RIGHT.R:  !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [ 9.9994271855738337e-01, 2.3199421971676496e-03,
       -1.0448802432405537e-02, -2.3377792068939116e-03,
       9.9999583054024277e-01, -1.6951963041690100e-03,
       1.0444826109105763e-02, 1.7195261939426066e-03,
       9.9994397284908876e-01 ]
RIGHT.P:  !!opencv-matrix
   rows: 3
   cols: 4
   dt: d
   data: [ 7.8135803071870055e+02, 0., 6.1796599578857422e+02,
       -3.7624842167702110e+02, 0., 7.8135803071870055e+02,
       2.6354596138000488e+02, 0., 0., 0., 1., 0. ]


#--------------------------------------------------------------------------------------------
# Encoder Parameters
#--------------------------------------------------------------------------------------------
Encoder.resolution: 4096
Encoder.leftWheelDiameter: 0.623479
Encoder.rightWheelDiameter: 0.622806
Encoder.wheelBase: 1.52439

#--------------------------------------------------------------------------------------------
# Camara to Encoder
#--------------------------------------------------------------------------------------------

Tvc:  !!opencv-matrix
   rows: 4
   cols: 4
   dt: f
   data: [-6.80499e-03, -1.53215e-02, 9.9985e-01, 1.64239e+00,
          -9.99977e-01, 3.34627e-04, -6.80066e-03, 2.47401e-01, 
          -2.30383e-04, -9.99883e-01, -1.53234e-02, 1.58411e+00,
          0.,0.,0.,1]

#--------------------------------------------------------------------------------------------
# ORB Parameters
#--------------------------------------------------------------------------------------------

# ORB Extractor: Number of features per image
ORBextractor.nFeatures: 2000

# ORB Extractor: Scale factor between levels in the scale pyramid 	
ORBextractor.scaleFactor: 1.2

# ORB Extractor: Number of levels in the scale pyramid	
ORBextractor.nLevels: 8

# ORB Extractor: Fast threshold
# Image is divided in a grid. At each cell FAST are extracted imposing a minimum response.
# Firstly we impose iniThFAST. If no corners are detected we impose a lower value minThFAST
# You can lower these values if your images have low contrast（对比度）			
ORBextractor.iniThFAST: 18
ORBextractor.minThFAST: 7
# ORBextractor.iniThFAST: 16
# ORBextractor.minThFAST: 5

#--------------------------------------------------------------------------------------------
# Viewer Parameters
#--------------------------------------------------------------------------------------------
Viewer.KeyFrameSize: 0.6
Viewer.KeyFrameLineWidth: 2
Viewer.GraphLineWidth: 1
Viewer.PointSize:2
Viewer.CameraSize: 0.7
Viewer.CameraLineWidth: 3
Viewer.ViewpointX: 0
Viewer.ViewpointY: -100
Viewer.ViewpointZ: -0.1
Viewer.ViewpointF: 2000

